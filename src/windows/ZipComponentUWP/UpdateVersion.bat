::
:: Reads the value "ProductVersion" from the resource file ZipComponentUWP.rc
:: and creates file Source\ZipComponent.Version.cpp containing a method that
:: returns the version as a string.
::
@ECHO OFF
SET PROJECTPATH=%~dp0
SET RESOURCEFILE=%PROJECTPATH%ZipComponentUWP.rc
SET VERSIONCPP=%PROJECTPATH%Source\ZipComponent.Version.cpp

:: The resource file is in unicode format, but FINDSTR can't handle that. So use TYPE to avoid the issue.
FOR /F "tokens=*" %%g IN ('TYPE %RESOURCEFILE% ^| FINDSTR ProductVersion') DO (SET VERSIONSTRING=%%g)

:: Get the part right from the comma and trim the result
SET "x=%VERSIONSTRING:,=" & SET "VERSIONSTRING=%"

:: Create or overwrite the cpp file with the GetVersion() method
echo // > %VERSIONCPP%
echo // DO NOT EDIT THIS FILE MANUALLY >> %VERSIONCPP%
echo // >> %VERSIONCPP%
echo // This file is automatically generated in the pre-build step by the UpdateVersion.bat script >> %VERSIONCPP%
echo // Change the version number in the ZipComponentUWP.rc file >> %VERSIONCPP%
echo // >> %VERSIONCPP%
echo // DO NOT EDIT THIS FILE MANUALLY  >> %VERSIONCPP%
echo //  >> %VERSIONCPP%
echo #include "pch.h" >> %VERSIONCPP%
echo #include ^<cvt/wstring^> >> %VERSIONCPP%
echo #include ^<codecvt^> >> %VERSIONCPP%
echo #include "ZipAlgorithm.h" >> %VERSIONCPP%
echo #include "ZipComponent.h" >> %VERSIONCPP%
echo. >> %VERSIONCPP%
echo using namespace ZipComponentUWP; >> %VERSIONCPP%
echo. >> %VERSIONCPP%
echo String^^ ZipComponent::GetVersion() >> %VERSIONCPP%
echo { >> %VERSIONCPP%
echo 	return%VERSIONSTRING%; >> %VERSIONCPP%
echo } >> %VERSIONCPP%

echo UpdateVersion.bat: Set version%VERSIONSTRING% in Source\ZipComponent.Version.cpp